services:
  twitch-shorts:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: twitch-shorts
    ports:
      - "8000:8000"
    volumes:
      - ./Backend:/app/Backend:cached
      - ./temp:/app/temp:cached
    environment:
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_ACCESS_TOKEN=${TWITCH_ACCESS_TOKEN}
      - TWITCH_CHANNEL_ID=${TWITCH_CHANNEL_ID}
      - ASSEMBLY_AI_API_KEY=${ASSEMBLY_AI_API_KEY}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - IMAGEMAGICK_BINARY=${IMAGEMAGICK_BINARY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HIGHLIGHT_LOG_DIR=/app/temp
    restart: on-failure:2
    develop:
      watch:
        - action: sync
          path: ./Backend
          target: /app/Backend
          ignore:
            - "*.pyc"
            - "__pycache__/"
        - action: rebuild
          path: ./requirements.txt
    env_file:
      - .env

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: dashboard
    ports:
      - "5000:5000"
      - "5173:5173"
    working_dir: /app/Dashboard/frontend
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - ./Dashboard:/app/Dashboard:cached
      - ./Dashboard/frontend:/app/Dashboard/frontend:cached
      - /app/Dashboard/frontend/node_modules
    environment:
      - NODE_ENV=development
      - BACKEND_API_URL=http://twitch-shorts:8000
    restart: on-failure:2
    develop:
      watch:
        - action: sync
          path: ./Dashboard
          target: /app/Dashboard
          ignore:
            - "node_modules/"
            - "frontend/node_modules/"
            - "dist/"
        - action: rebuild
          path: ./Dashboard/package.json
        - action: rebuild
          path: ./Dashboard/server.js
